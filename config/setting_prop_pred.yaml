# Basic setting
c_val: 1.0
# threshold_type: [time, generation_num]
threshold_type: generation_num
#hours: 0.01
generation_num: 5
output_dir: result/prop_pred
model_setting:
  model_json: model/model_chembl220k.tf25.json
  model_weight: model/model_chembl220k.tf25.best.ckpt.h5
token: model/tokens_chembl220k.pkl
reward_setting:
  reward_module: reward.Property_reward
  reward_class: Property_reward

# Advanced setting
expansion_threshold: 0.995
simulation_num: 3
flush_threshold: -1
policy_setting: 
  policy_module: policy.ucb1
  policy_class: Ucb1

# Restart setting
save_checkpoint: False
restart: False
checkpoint_file: chemtsv2.ckpt.pkl

# Filter setting
use_lipinski_filter: False
lipinski_filter:
  module: filter.lipinski_filter
  class: LipinskiFilter
  type: rule_of_5
use_radical_filter: False
radical_filter:
  module: filter.radical_filter
  class: RadicalFilter
use_pubchem_filter: False
pubchem_filter:
  module: filter.pubchem_filter
  class: PubchemFilter
use_sascore_filter: False
sascore_filter:
  module: filter.sascore_filter
  class: SascoreFilter
  threshold: 3.5
use_ring_size_filter: False
ring_size_filter:
  module: filter.ring_size_filter
  class: RingSizeFilter
  threshold: 6
use_pains_filter: True
pains_filter:
  module: filter.pains_filter
  class: PainsFilter
  type: [pains_a]
include_filter_result_in_reward: False

# User setting
#dataloader:
#    infile: ./EGFR.csv
#    target: smiles
#    tasks: ["value"]
#    featurizer:
#        type: ConvMolFeaturizer
#        kwargs:
#            per_atom_fragmentation: False
#    transformers: ['NormalizationTransformer']
    
#splitter:
#    type: RandomStratifiedSplitter
#    kwargs: 
#    method: train_test_split
#    rate: { 'train': 0.8, 'valid': 0.2, 'test': 0.2, 'k': 5 }

deepchem:
    featurizer:
        type: ConvMolFeaturizer
        kwargs:
            per_atom_fragmentation: False
    transformers: ['NormalizationTransformer']
    n_tasks: 1
    graph_conv_layers: [64,64]
    dense_layer_size: 64
    dropout: 0.5
    mode: 'regression'
    number_atom_features: 75
    n_classes: 2
    batch_size: 100
    batch_normalize: True
    uncertainty: True
    model_dir: './property_prediction/model_train'
    #nb_epoch: 10
    #metrics: ["r2_score","pearson_r2_score","mean_squared_error","mean_absolute_error","rms_score","mae_score"]
    #valid_metric: "pearson_r2_score"
    #valid_interval: 2
